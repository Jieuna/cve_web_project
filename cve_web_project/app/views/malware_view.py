from flask import Blueprint, render_template, request, url_for, send_file
from werkzeug.utils import secure_filename, redirect
from app.tools.tool_base import drop_file, read_module
from app.tools.interface import *

import json

bp = Blueprint('malware', __name__, url_prefix='/malware')

json_data = dict()
with open("cve_info.json", encoding="euc-kr") as json_file:
    json_data = json.load(json_file)
cve_list = json_data["CVE_info"]


@bp.route('/list')
def _list():
    return render_template('malware_creation/malware_list.html', cve_list=cve_list)


@bp.route('/create_main')
def create_main():
    return render_template('malware_creation/malware_create.html', cve_list=cve_list)


@bp.route('/create/set', methods=['GET'])
def set_options():
    no = request.args["choose_cve"]
    for cve in cve_list:
        if no == cve["no"]:
            data = read_module(cve["number"])
    return render_template('malware_creation/malware_set_options.html', no=no, cve_list=cve_list, data = data.decode())


@bp.route('/create/<no>', methods=['POST'])
def create(no):
    for cve in cve_list:
        if no == cve["no"]:
            title = cve["number"]
            out_file = drop_file(title, request.form.to_dict(), cve)
            #return out_file
            return send_file(LOC_TMP + out_file, mimetype="application/octet-stream", attachment_filename=out_file,
                             as_attachment=True)


@bp.route('/history')
def history():
    with open("cve_history.json", encoding="euc-kr") as json_file:
        history_data = json.load(json_file)
        keys = [key for key in history_data]
        return render_template('malware_creation/malware_check_history.html', history_data = history_data, keys = keys)


@bp.route('/detect')
def detect():
    return render_template('malware_detection/malware_detect.html')


@bp.route('/result')
def result():
    return render_template('malware_detection/malware_check_result.html')


@bp.route('/upload', methods=['POST'])
def upload_file():
    file = request.files['file']
    if not file:
        return redirect(url_for('malware.detect'))
    file.save(secure_filename(file.filename))
    return 'success'
